# Stage 1: Compile the planner
Bootstrap: docker
From: nvidia/cuda:12.0.1-cudnn8-devel-ubuntu22.04
Stage: build

%files
    src /planner/src
    CMakeLists.txt /planner/CMakeLists.txt

%post
    ## Install all dependencies.
    apt-get update
    apt-get -y install --no-install-recommends unzip g++ libboost-dev cmake gcc-multilib g++-multilib wget

    # Fetch LibTorch
    cd /planner
    wget https://download.pytorch.org/libtorch/cu118/libtorch-cxx11-abi-shared-with-deps-2.0.0%2Bcu118.zip

    # Build planner
    unzip libtorch*zip -d /usr/local
    rm libtorch*zip
    mkdir -p /planner/build
    cd /planner/build
    cmake .. -DCMAKE_BUILD_TYPE=Release
    cmake --build . -- -j 8

    # Strip binaries
    strip --strip-all /planner/build/src/ipc_train /planner/build/src/ipc_plan

# Stage 2: Run the planner
Bootstrap: docker
From: nvidia/cuda:12.0.1-runtime-ubuntu22.04
Stage: run

%files from build
    /planner/build/src/ipc_train /planner/ipc_train
    /planner/build/src/ipc_plan /planner/ipc_plan
    /usr/local/libtorch /usr/local/libtorch

%post
    apt-get update
    apt-get -y install --no-install-recommends libboost-dev zip
    apt-get clean
    rm -rf /var/lib/apt/lists/*

%runscript
    OUTPUT_FILE="$1"
    DOMAIN_FILE="$2"
    shift 2
    PROBLEM_FILES="$*"

    echo "Output: ${OUTPUT_FILE}"
    echo "Domain: ${DOMAIN_FILE}"
    echo "Problems: ${PROBLEM_FILES}"

    OUTPUT_DIRECTORY="$(dirname ${OUTPUT_FILE})"
    INPUT_DIRECTORY="$(mktemp -d)"

    cp "${DOMAIN_FILE}" "${INPUT_DIRECTORY}"
    for FILE in ${PROBLEM_FILES}; do
        cp "${FILE}" "${INPUT_DIRECTORY}"
    done

    cd "${OUTPUT_DIRECTORY}"
    timeout 34200 /planner/ipc_train --input "${INPUT_DIRECTORY}" --time_optimal 240 --time_suboptimal 300
    zip "${OUTPUT_FILE}".1 optimal_best.hparams optimal_best.pnn suboptimal_best.hparams suboptimal_best.pnn use_wl

    rm -rf "${INPUT_DIRECTORY}"

%labels
Name         Muninn
Description  Learn Relational MPNNs for STRIPS
Authors      Simon St√•hlberg <simon.stahlberg@liu.se>, Blai Bonet <bonetblai@gmail.com>, Hector Geffner <hector.geffner@ml.rwth-aachen.de>
License      GNU GPLv3
Environments multi-core
SupportsDerivedPredicates                    no
SupportsUniversallyQuantifiedPreconditions   no
SupportsExistentiallyQuantifiedPreconditions no
SupportsUniversallyQuantifiedEffects         no
SupportsNegativePreconditions                yes
SupportsEqualityPreconditions                no
SupportsInequalityPreconditions              no
SupportsConditionalEffects                   no
SupportsImplyPreconditions                   no
